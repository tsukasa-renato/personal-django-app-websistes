# Generated by Django 4.0.5 on 2022-06-21 01:11

from django.db import migrations, models
import django.db.models.deletion
import websites.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=20)),
                ('icon', models.ImageField(blank=True, null=True, upload_to=websites.models.icon_path)),
                ('slug', models.SlugField(blank=True, max_length=20)),
                ('position', models.PositiveSmallIntegerField(default=1)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('minimum', models.PositiveIntegerField(default=0)),
                ('maximum', models.PositiveIntegerField(default=1)),
                ('title', models.CharField(max_length=50)),
                ('slug', models.SlugField(blank=True, max_length=200)),
                ('position', models.PositiveSmallIntegerField(default=1)),
                ('price_type', models.CharField(blank=True, choices=[('1', 'Sum all the options price'), ('2', 'Average all the options price')], max_length=1, null=True, verbose_name='How is the price calculated?')),
            ],
            options={
                'verbose_name': 'Group',
                'verbose_name_plural': 'Groups',
            },
        ),
        migrations.CreateModel(
            name='Websites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_available', models.BooleanField(default=True, verbose_name='Is available?')),
                ('reason', models.CharField(blank=True, max_length=100, null=True, verbose_name='Reason (optional, only for unavailable)')),
                ('url', models.SlugField(max_length=30, unique=True)),
                ('title', models.CharField(max_length=20)),
                ('home', models.CharField(default='Highlight', max_length=20, verbose_name='Homepage title')),
                ('timezone', models.CharField(choices=[('Africa/Abidjan', 'Africa/Abidjan'), ('Africa/Accra', 'Africa/Accra'), ('Africa/Addis_Ababa', 'Africa/Addis_Ababa'), ('Africa/Algiers', 'Africa/Algiers'), ('Africa/Asmara', 'Africa/Asmara'), ('Africa/Bamako', 'Africa/Bamako'), ('Africa/Bangui', 'Africa/Bangui'), ('Africa/Banjul', 'Africa/Banjul'), ('Africa/Bissau', 'Africa/Bissau'), ('Africa/Blantyre', 'Africa/Blantyre'), ('Africa/Brazzaville', 'Africa/Brazzaville'), ('Africa/Bujumbura', 'Africa/Bujumbura'), ('Africa/Cairo', 'Africa/Cairo'), ('Africa/Casablanca', 'Africa/Casablanca'), ('Africa/Ceuta', 'Africa/Ceuta'), ('Africa/Conakry', 'Africa/Conakry'), ('Africa/Dakar', 'Africa/Dakar'), ('Africa/Dar_es_Salaam', 'Africa/Dar_es_Salaam'), ('Africa/Djibouti', 'Africa/Djibouti'), ('Africa/Douala', 'Africa/Douala'), ('Africa/El_Aaiun', 'Africa/El_Aaiun'), ('Africa/Freetown', 'Africa/Freetown'), ('Africa/Gaborone', 'Africa/Gaborone'), ('Africa/Harare', 'Africa/Harare'), ('Africa/Johannesburg', 'Africa/Johannesburg'), ('Africa/Juba', 'Africa/Juba'), ('Africa/Kampala', 'Africa/Kampala'), ('Africa/Khartoum', 'Africa/Khartoum'), ('Africa/Kigali', 'Africa/Kigali'), ('Africa/Kinshasa', 'Africa/Kinshasa'), ('Africa/Lagos', 'Africa/Lagos'), ('Africa/Libreville', 'Africa/Libreville'), ('Africa/Lome', 'Africa/Lome'), ('Africa/Luanda', 'Africa/Luanda'), ('Africa/Lubumbashi', 'Africa/Lubumbashi'), ('Africa/Lusaka', 'Africa/Lusaka'), ('Africa/Malabo', 'Africa/Malabo'), ('Africa/Maputo', 'Africa/Maputo'), ('Africa/Maseru', 'Africa/Maseru'), ('Africa/Mbabane', 'Africa/Mbabane'), ('Africa/Mogadishu', 'Africa/Mogadishu'), ('Africa/Monrovia', 'Africa/Monrovia'), ('Africa/Nairobi', 'Africa/Nairobi'), ('Africa/Ndjamena', 'Africa/Ndjamena'), ('Africa/Niamey', 'Africa/Niamey'), ('Africa/Nouakchott', 'Africa/Nouakchott'), ('Africa/Ouagadougou', 'Africa/Ouagadougou'), ('Africa/Porto-Novo', 'Africa/Porto-Novo'), ('Africa/Sao_Tome', 'Africa/Sao_Tome'), ('Africa/Tripoli', 'Africa/Tripoli'), ('Africa/Tunis', 'Africa/Tunis'), ('Africa/Windhoek', 'Africa/Windhoek'), ('America/Adak', 'America/Adak'), ('America/Anchorage', 'America/Anchorage'), ('America/Anguilla', 'America/Anguilla'), ('America/Antigua', 'America/Antigua'), ('America/Araguaina', 'America/Araguaina'), ('America/Argentina/Buenos_Aires', 'America/Argentina/Buenos_Aires'), ('America/Argentina/Catamarca', 'America/Argentina/Catamarca'), ('America/Argentina/Cordoba', 'America/Argentina/Cordoba'), ('America/Argentina/Jujuy', 'America/Argentina/Jujuy'), ('America/Argentina/La_Rioja', 'America/Argentina/La_Rioja'), ('America/Argentina/Mendoza', 'America/Argentina/Mendoza'), ('America/Argentina/Rio_Gallegos', 'America/Argentina/Rio_Gallegos'), ('America/Argentina/Salta', 'America/Argentina/Salta'), ('America/Argentina/San_Juan', 'America/Argentina/San_Juan'), ('America/Argentina/San_Luis', 'America/Argentina/San_Luis'), ('America/Argentina/Tucuman', 'America/Argentina/Tucuman'), ('America/Argentina/Ushuaia', 'America/Argentina/Ushuaia'), ('America/Aruba', 'America/Aruba'), ('America/Asuncion', 'America/Asuncion'), ('America/Atikokan', 'America/Atikokan'), ('America/Bahia', 'America/Bahia'), ('America/Bahia_Banderas', 'America/Bahia_Banderas'), ('America/Barbados', 'America/Barbados'), ('America/Belem', 'America/Belem'), ('America/Belize', 'America/Belize'), ('America/Blanc-Sablon', 'America/Blanc-Sablon'), ('America/Boa_Vista', 'America/Boa_Vista'), ('America/Bogota', 'America/Bogota'), ('America/Boise', 'America/Boise'), ('America/Cambridge_Bay', 'America/Cambridge_Bay'), ('America/Campo_Grande', 'America/Campo_Grande'), ('America/Cancun', 'America/Cancun'), ('America/Caracas', 'America/Caracas'), ('America/Cayenne', 'America/Cayenne'), ('America/Cayman', 'America/Cayman'), ('America/Chicago', 'America/Chicago'), ('America/Chihuahua', 'America/Chihuahua'), ('America/Costa_Rica', 'America/Costa_Rica'), ('America/Creston', 'America/Creston'), ('America/Cuiaba', 'America/Cuiaba'), ('America/Curacao', 'America/Curacao'), ('America/Danmarkshavn', 'America/Danmarkshavn'), ('America/Dawson', 'America/Dawson'), ('America/Dawson_Creek', 'America/Dawson_Creek'), ('America/Denver', 'America/Denver'), ('America/Detroit', 'America/Detroit'), ('America/Dominica', 'America/Dominica'), ('America/Edmonton', 'America/Edmonton'), ('America/Eirunepe', 'America/Eirunepe'), ('America/El_Salvador', 'America/El_Salvador'), ('America/Fort_Nelson', 'America/Fort_Nelson'), ('America/Fortaleza', 'America/Fortaleza'), ('America/Glace_Bay', 'America/Glace_Bay'), ('America/Goose_Bay', 'America/Goose_Bay'), ('America/Grand_Turk', 'America/Grand_Turk'), ('America/Grenada', 'America/Grenada'), ('America/Guadeloupe', 'America/Guadeloupe'), ('America/Guatemala', 'America/Guatemala'), ('America/Guayaquil', 'America/Guayaquil'), ('America/Guyana', 'America/Guyana'), ('America/Halifax', 'America/Halifax'), ('America/Havana', 'America/Havana'), ('America/Hermosillo', 'America/Hermosillo'), ('America/Indiana/Indianapolis', 'America/Indiana/Indianapolis'), ('America/Indiana/Knox', 'America/Indiana/Knox'), ('America/Indiana/Marengo', 'America/Indiana/Marengo'), ('America/Indiana/Petersburg', 'America/Indiana/Petersburg'), ('America/Indiana/Tell_City', 'America/Indiana/Tell_City'), ('America/Indiana/Vevay', 'America/Indiana/Vevay'), ('America/Indiana/Vincennes', 'America/Indiana/Vincennes'), ('America/Indiana/Winamac', 'America/Indiana/Winamac'), ('America/Inuvik', 'America/Inuvik'), ('America/Iqaluit', 'America/Iqaluit'), ('America/Jamaica', 'America/Jamaica'), ('America/Juneau', 'America/Juneau'), ('America/Kentucky/Louisville', 'America/Kentucky/Louisville'), ('America/Kentucky/Monticello', 'America/Kentucky/Monticello'), ('America/Kralendijk', 'America/Kralendijk'), ('America/La_Paz', 'America/La_Paz'), ('America/Lima', 'America/Lima'), ('America/Los_Angeles', 'America/Los_Angeles'), ('America/Lower_Princes', 'America/Lower_Princes'), ('America/Maceio', 'America/Maceio'), ('America/Managua', 'America/Managua'), ('America/Manaus', 'America/Manaus'), ('America/Marigot', 'America/Marigot'), ('America/Martinique', 'America/Martinique'), ('America/Matamoros', 'America/Matamoros'), ('America/Mazatlan', 'America/Mazatlan'), ('America/Menominee', 'America/Menominee'), ('America/Merida', 'America/Merida'), ('America/Metlakatla', 'America/Metlakatla'), ('America/Mexico_City', 'America/Mexico_City'), ('America/Miquelon', 'America/Miquelon'), ('America/Moncton', 'America/Moncton'), ('America/Monterrey', 'America/Monterrey'), ('America/Montevideo', 'America/Montevideo'), ('America/Montserrat', 'America/Montserrat'), ('America/Nassau', 'America/Nassau'), ('America/New_York', 'America/New_York'), ('America/Nipigon', 'America/Nipigon'), ('America/Nome', 'America/Nome'), ('America/Noronha', 'America/Noronha'), ('America/North_Dakota/Beulah', 'America/North_Dakota/Beulah'), ('America/North_Dakota/Center', 'America/North_Dakota/Center'), ('America/North_Dakota/New_Salem', 'America/North_Dakota/New_Salem'), ('America/Nuuk', 'America/Nuuk'), ('America/Ojinaga', 'America/Ojinaga'), ('America/Panama', 'America/Panama'), ('America/Pangnirtung', 'America/Pangnirtung'), ('America/Paramaribo', 'America/Paramaribo'), ('America/Phoenix', 'America/Phoenix'), ('America/Port-au-Prince', 'America/Port-au-Prince'), ('America/Port_of_Spain', 'America/Port_of_Spain'), ('America/Porto_Velho', 'America/Porto_Velho'), ('America/Puerto_Rico', 'America/Puerto_Rico'), ('America/Punta_Arenas', 'America/Punta_Arenas'), ('America/Rainy_River', 'America/Rainy_River'), ('America/Rankin_Inlet', 'America/Rankin_Inlet'), ('America/Recife', 'America/Recife'), ('America/Regina', 'America/Regina'), ('America/Resolute', 'America/Resolute'), ('America/Rio_Branco', 'America/Rio_Branco'), ('America/Santarem', 'America/Santarem'), ('America/Santiago', 'America/Santiago'), ('America/Santo_Domingo', 'America/Santo_Domingo'), ('America/Sao_Paulo', 'America/Sao_Paulo'), ('America/Scoresbysund', 'America/Scoresbysund'), ('America/Sitka', 'America/Sitka'), ('America/St_Barthelemy', 'America/St_Barthelemy'), ('America/St_Johns', 'America/St_Johns'), ('America/St_Kitts', 'America/St_Kitts'), ('America/St_Lucia', 'America/St_Lucia'), ('America/St_Thomas', 'America/St_Thomas'), ('America/St_Vincent', 'America/St_Vincent'), ('America/Swift_Current', 'America/Swift_Current'), ('America/Tegucigalpa', 'America/Tegucigalpa'), ('America/Thule', 'America/Thule'), ('America/Thunder_Bay', 'America/Thunder_Bay'), ('America/Tijuana', 'America/Tijuana'), ('America/Toronto', 'America/Toronto'), ('America/Tortola', 'America/Tortola'), ('America/Vancouver', 'America/Vancouver'), ('America/Whitehorse', 'America/Whitehorse'), ('America/Winnipeg', 'America/Winnipeg'), ('America/Yakutat', 'America/Yakutat'), ('America/Yellowknife', 'America/Yellowknife'), ('Antarctica/Casey', 'Antarctica/Casey'), ('Antarctica/Davis', 'Antarctica/Davis'), ('Antarctica/DumontDUrville', 'Antarctica/DumontDUrville'), ('Antarctica/Macquarie', 'Antarctica/Macquarie'), ('Antarctica/Mawson', 'Antarctica/Mawson'), ('Antarctica/McMurdo', 'Antarctica/McMurdo'), ('Antarctica/Palmer', 'Antarctica/Palmer'), ('Antarctica/Rothera', 'Antarctica/Rothera'), ('Antarctica/Syowa', 'Antarctica/Syowa'), ('Antarctica/Troll', 'Antarctica/Troll'), ('Antarctica/Vostok', 'Antarctica/Vostok'), ('Arctic/Longyearbyen', 'Arctic/Longyearbyen'), ('Asia/Aden', 'Asia/Aden'), ('Asia/Almaty', 'Asia/Almaty'), ('Asia/Amman', 'Asia/Amman'), ('Asia/Anadyr', 'Asia/Anadyr'), ('Asia/Aqtau', 'Asia/Aqtau'), ('Asia/Aqtobe', 'Asia/Aqtobe'), ('Asia/Ashgabat', 'Asia/Ashgabat'), ('Asia/Atyrau', 'Asia/Atyrau'), ('Asia/Baghdad', 'Asia/Baghdad'), ('Asia/Bahrain', 'Asia/Bahrain'), ('Asia/Baku', 'Asia/Baku'), ('Asia/Bangkok', 'Asia/Bangkok'), ('Asia/Barnaul', 'Asia/Barnaul'), ('Asia/Beirut', 'Asia/Beirut'), ('Asia/Bishkek', 'Asia/Bishkek'), ('Asia/Brunei', 'Asia/Brunei'), ('Asia/Chita', 'Asia/Chita'), ('Asia/Choibalsan', 'Asia/Choibalsan'), ('Asia/Colombo', 'Asia/Colombo'), ('Asia/Damascus', 'Asia/Damascus'), ('Asia/Dhaka', 'Asia/Dhaka'), ('Asia/Dili', 'Asia/Dili'), ('Asia/Dubai', 'Asia/Dubai'), ('Asia/Dushanbe', 'Asia/Dushanbe'), ('Asia/Famagusta', 'Asia/Famagusta'), ('Asia/Gaza', 'Asia/Gaza'), ('Asia/Hebron', 'Asia/Hebron'), ('Asia/Ho_Chi_Minh', 'Asia/Ho_Chi_Minh'), ('Asia/Hong_Kong', 'Asia/Hong_Kong'), ('Asia/Hovd', 'Asia/Hovd'), ('Asia/Irkutsk', 'Asia/Irkutsk'), ('Asia/Jakarta', 'Asia/Jakarta'), ('Asia/Jayapura', 'Asia/Jayapura'), ('Asia/Jerusalem', 'Asia/Jerusalem'), ('Asia/Kabul', 'Asia/Kabul'), ('Asia/Kamchatka', 'Asia/Kamchatka'), ('Asia/Karachi', 'Asia/Karachi'), ('Asia/Kathmandu', 'Asia/Kathmandu'), ('Asia/Khandyga', 'Asia/Khandyga'), ('Asia/Kolkata', 'Asia/Kolkata'), ('Asia/Krasnoyarsk', 'Asia/Krasnoyarsk'), ('Asia/Kuala_Lumpur', 'Asia/Kuala_Lumpur'), ('Asia/Kuching', 'Asia/Kuching'), ('Asia/Kuwait', 'Asia/Kuwait'), ('Asia/Macau', 'Asia/Macau'), ('Asia/Magadan', 'Asia/Magadan'), ('Asia/Makassar', 'Asia/Makassar'), ('Asia/Manila', 'Asia/Manila'), ('Asia/Muscat', 'Asia/Muscat'), ('Asia/Nicosia', 'Asia/Nicosia'), ('Asia/Novokuznetsk', 'Asia/Novokuznetsk'), ('Asia/Novosibirsk', 'Asia/Novosibirsk'), ('Asia/Omsk', 'Asia/Omsk'), ('Asia/Oral', 'Asia/Oral'), ('Asia/Phnom_Penh', 'Asia/Phnom_Penh'), ('Asia/Pontianak', 'Asia/Pontianak'), ('Asia/Pyongyang', 'Asia/Pyongyang'), ('Asia/Qatar', 'Asia/Qatar'), ('Asia/Qostanay', 'Asia/Qostanay'), ('Asia/Qyzylorda', 'Asia/Qyzylorda'), ('Asia/Riyadh', 'Asia/Riyadh'), ('Asia/Sakhalin', 'Asia/Sakhalin'), ('Asia/Samarkand', 'Asia/Samarkand'), ('Asia/Seoul', 'Asia/Seoul'), ('Asia/Shanghai', 'Asia/Shanghai'), ('Asia/Singapore', 'Asia/Singapore'), ('Asia/Srednekolymsk', 'Asia/Srednekolymsk'), ('Asia/Taipei', 'Asia/Taipei'), ('Asia/Tashkent', 'Asia/Tashkent'), ('Asia/Tbilisi', 'Asia/Tbilisi'), ('Asia/Tehran', 'Asia/Tehran'), ('Asia/Thimphu', 'Asia/Thimphu'), ('Asia/Tokyo', 'Asia/Tokyo'), ('Asia/Tomsk', 'Asia/Tomsk'), ('Asia/Ulaanbaatar', 'Asia/Ulaanbaatar'), ('Asia/Urumqi', 'Asia/Urumqi'), ('Asia/Ust-Nera', 'Asia/Ust-Nera'), ('Asia/Vientiane', 'Asia/Vientiane'), ('Asia/Vladivostok', 'Asia/Vladivostok'), ('Asia/Yakutsk', 'Asia/Yakutsk'), ('Asia/Yangon', 'Asia/Yangon'), ('Asia/Yekaterinburg', 'Asia/Yekaterinburg'), ('Asia/Yerevan', 'Asia/Yerevan'), ('Atlantic/Azores', 'Atlantic/Azores'), ('Atlantic/Bermuda', 'Atlantic/Bermuda'), ('Atlantic/Canary', 'Atlantic/Canary'), ('Atlantic/Cape_Verde', 'Atlantic/Cape_Verde'), ('Atlantic/Faroe', 'Atlantic/Faroe'), ('Atlantic/Madeira', 'Atlantic/Madeira'), ('Atlantic/Reykjavik', 'Atlantic/Reykjavik'), ('Atlantic/South_Georgia', 'Atlantic/South_Georgia'), ('Atlantic/St_Helena', 'Atlantic/St_Helena'), ('Atlantic/Stanley', 'Atlantic/Stanley'), ('Australia/Adelaide', 'Australia/Adelaide'), ('Australia/Brisbane', 'Australia/Brisbane'), ('Australia/Broken_Hill', 'Australia/Broken_Hill'), ('Australia/Currie', 'Australia/Currie'), ('Australia/Darwin', 'Australia/Darwin'), ('Australia/Eucla', 'Australia/Eucla'), ('Australia/Hobart', 'Australia/Hobart'), ('Australia/Lindeman', 'Australia/Lindeman'), ('Australia/Lord_Howe', 'Australia/Lord_Howe'), ('Australia/Melbourne', 'Australia/Melbourne'), ('Australia/Perth', 'Australia/Perth'), ('Australia/Sydney', 'Australia/Sydney'), ('Canada/Atlantic', 'Canada/Atlantic'), ('Canada/Central', 'Canada/Central'), ('Canada/Eastern', 'Canada/Eastern'), ('Canada/Mountain', 'Canada/Mountain'), ('Canada/Newfoundland', 'Canada/Newfoundland'), ('Canada/Pacific', 'Canada/Pacific'), ('Europe/Amsterdam', 'Europe/Amsterdam'), ('Europe/Andorra', 'Europe/Andorra'), ('Europe/Astrakhan', 'Europe/Astrakhan'), ('Europe/Athens', 'Europe/Athens'), ('Europe/Belgrade', 'Europe/Belgrade'), ('Europe/Berlin', 'Europe/Berlin'), ('Europe/Bratislava', 'Europe/Bratislava'), ('Europe/Brussels', 'Europe/Brussels'), ('Europe/Bucharest', 'Europe/Bucharest'), ('Europe/Budapest', 'Europe/Budapest'), ('Europe/Busingen', 'Europe/Busingen'), ('Europe/Chisinau', 'Europe/Chisinau'), ('Europe/Copenhagen', 'Europe/Copenhagen'), ('Europe/Dublin', 'Europe/Dublin'), ('Europe/Gibraltar', 'Europe/Gibraltar'), ('Europe/Guernsey', 'Europe/Guernsey'), ('Europe/Helsinki', 'Europe/Helsinki'), ('Europe/Isle_of_Man', 'Europe/Isle_of_Man'), ('Europe/Istanbul', 'Europe/Istanbul'), ('Europe/Jersey', 'Europe/Jersey'), ('Europe/Kaliningrad', 'Europe/Kaliningrad'), ('Europe/Kiev', 'Europe/Kiev'), ('Europe/Kirov', 'Europe/Kirov'), ('Europe/Lisbon', 'Europe/Lisbon'), ('Europe/Ljubljana', 'Europe/Ljubljana'), ('Europe/London', 'Europe/London'), ('Europe/Luxembourg', 'Europe/Luxembourg'), ('Europe/Madrid', 'Europe/Madrid'), ('Europe/Malta', 'Europe/Malta'), ('Europe/Mariehamn', 'Europe/Mariehamn'), ('Europe/Minsk', 'Europe/Minsk'), ('Europe/Monaco', 'Europe/Monaco'), ('Europe/Moscow', 'Europe/Moscow'), ('Europe/Oslo', 'Europe/Oslo'), ('Europe/Paris', 'Europe/Paris'), ('Europe/Podgorica', 'Europe/Podgorica'), ('Europe/Prague', 'Europe/Prague'), ('Europe/Riga', 'Europe/Riga'), ('Europe/Rome', 'Europe/Rome'), ('Europe/Samara', 'Europe/Samara'), ('Europe/San_Marino', 'Europe/San_Marino'), ('Europe/Sarajevo', 'Europe/Sarajevo'), ('Europe/Saratov', 'Europe/Saratov'), ('Europe/Simferopol', 'Europe/Simferopol'), ('Europe/Skopje', 'Europe/Skopje'), ('Europe/Sofia', 'Europe/Sofia'), ('Europe/Stockholm', 'Europe/Stockholm'), ('Europe/Tallinn', 'Europe/Tallinn'), ('Europe/Tirane', 'Europe/Tirane'), ('Europe/Ulyanovsk', 'Europe/Ulyanovsk'), ('Europe/Uzhgorod', 'Europe/Uzhgorod'), ('Europe/Vaduz', 'Europe/Vaduz'), ('Europe/Vatican', 'Europe/Vatican'), ('Europe/Vienna', 'Europe/Vienna'), ('Europe/Vilnius', 'Europe/Vilnius'), ('Europe/Volgograd', 'Europe/Volgograd'), ('Europe/Warsaw', 'Europe/Warsaw'), ('Europe/Zagreb', 'Europe/Zagreb'), ('Europe/Zaporozhye', 'Europe/Zaporozhye'), ('Europe/Zurich', 'Europe/Zurich'), ('GMT', 'GMT'), ('Indian/Antananarivo', 'Indian/Antananarivo'), ('Indian/Chagos', 'Indian/Chagos'), ('Indian/Christmas', 'Indian/Christmas'), ('Indian/Cocos', 'Indian/Cocos'), ('Indian/Comoro', 'Indian/Comoro'), ('Indian/Kerguelen', 'Indian/Kerguelen'), ('Indian/Mahe', 'Indian/Mahe'), ('Indian/Maldives', 'Indian/Maldives'), ('Indian/Mauritius', 'Indian/Mauritius'), ('Indian/Mayotte', 'Indian/Mayotte'), ('Indian/Reunion', 'Indian/Reunion'), ('Pacific/Apia', 'Pacific/Apia'), ('Pacific/Auckland', 'Pacific/Auckland'), ('Pacific/Bougainville', 'Pacific/Bougainville'), ('Pacific/Chatham', 'Pacific/Chatham'), ('Pacific/Chuuk', 'Pacific/Chuuk'), ('Pacific/Easter', 'Pacific/Easter'), ('Pacific/Efate', 'Pacific/Efate'), ('Pacific/Enderbury', 'Pacific/Enderbury'), ('Pacific/Fakaofo', 'Pacific/Fakaofo'), ('Pacific/Fiji', 'Pacific/Fiji'), ('Pacific/Funafuti', 'Pacific/Funafuti'), ('Pacific/Galapagos', 'Pacific/Galapagos'), ('Pacific/Gambier', 'Pacific/Gambier'), ('Pacific/Guadalcanal', 'Pacific/Guadalcanal'), ('Pacific/Guam', 'Pacific/Guam'), ('Pacific/Honolulu', 'Pacific/Honolulu'), ('Pacific/Kiritimati', 'Pacific/Kiritimati'), ('Pacific/Kosrae', 'Pacific/Kosrae'), ('Pacific/Kwajalein', 'Pacific/Kwajalein'), ('Pacific/Majuro', 'Pacific/Majuro'), ('Pacific/Marquesas', 'Pacific/Marquesas'), ('Pacific/Midway', 'Pacific/Midway'), ('Pacific/Nauru', 'Pacific/Nauru'), ('Pacific/Niue', 'Pacific/Niue'), ('Pacific/Norfolk', 'Pacific/Norfolk'), ('Pacific/Noumea', 'Pacific/Noumea'), ('Pacific/Pago_Pago', 'Pacific/Pago_Pago'), ('Pacific/Palau', 'Pacific/Palau'), ('Pacific/Pitcairn', 'Pacific/Pitcairn'), ('Pacific/Pohnpei', 'Pacific/Pohnpei'), ('Pacific/Port_Moresby', 'Pacific/Port_Moresby'), ('Pacific/Rarotonga', 'Pacific/Rarotonga'), ('Pacific/Saipan', 'Pacific/Saipan'), ('Pacific/Tahiti', 'Pacific/Tahiti'), ('Pacific/Tarawa', 'Pacific/Tarawa'), ('Pacific/Tongatapu', 'Pacific/Tongatapu'), ('Pacific/Wake', 'Pacific/Wake'), ('Pacific/Wallis', 'Pacific/Wallis'), ('US/Alaska', 'US/Alaska'), ('US/Arizona', 'US/Arizona'), ('US/Central', 'US/Central'), ('US/Eastern', 'US/Eastern'), ('US/Hawaii', 'US/Hawaii'), ('US/Mountain', 'US/Mountain'), ('US/Pacific', 'US/Pacific'), ('UTC', 'UTC')], default='UTC', max_length=30)),
                ('currency', models.CharField(choices=[('AED', 'AED'), ('AFN', 'AFN'), ('ALL', 'ALL'), ('AMD', 'AMD'), ('ANG', 'ANG'), ('AOA', 'AOA'), ('ARS', 'ARS'), ('AUD', 'AUD'), ('AWG', 'AWG'), ('AZN', 'AZN'), ('BAM', 'BAM'), ('BBD', 'BBD'), ('BDT', 'BDT'), ('BGN', 'BGN'), ('BHD', 'BHD'), ('BND', 'BND'), ('BOB', 'BOB'), ('BRL', 'BRL'), ('BSD', 'BSD'), ('BTN', 'BTN'), ('BWP', 'BWP'), ('BYR', 'BYR'), ('BZD', 'BZD'), ('CAD', 'CAD'), ('CHF', 'CHF'), ('CLP', 'CLP'), ('CNY', 'CNY'), ('COP', 'COP'), ('CRC', 'CRC'), ('CZK', 'CZK'), ('DKK', 'DKK'), ('DOP', 'DOP'), ('DZD', 'DZD'), ('EGP', 'EGP'), ('ETB', 'ETB'), ('EUR', 'EUR'), ('FJD', 'FJD'), ('GBP', 'GBP'), ('GEL', 'GEL'), ('GHS', 'GHS'), ('GMD', 'GMD'), ('GTQ', 'GTQ'), ('GYD', 'GYD'), ('HKD', 'HKD'), ('HNL', 'HNL'), ('HRK', 'HRK'), ('HUF', 'HUF'), ('IDR', 'IDR'), ('ILS', 'ILS'), ('INR', 'INR'), ('ISK', 'ISK'), ('JEP', 'JEP'), ('JMD', 'JMD'), ('JOD', 'JOD'), ('JPY', 'JPY'), ('KES', 'KES'), ('KGS', 'KGS'), ('KHR', 'KHR'), ('KRW', 'KRW'), ('KWD', 'KWD'), ('KYD', 'KYD'), ('KZT', 'KZT'), ('LBP', 'LBP'), ('LKR', 'LKR'), ('LTL', 'LTL'), ('LVL', 'LVL'), ('MAD', 'MAD'), ('MDL', 'MDL'), ('MGA', 'MGA'), ('MKD', 'MKD'), ('MMK', 'MMK'), ('MNT', 'MNT'), ('MOP', 'MOP'), ('MUR', 'MUR'), ('MVR', 'MVR'), ('MXN', 'MXN'), ('MYR', 'MYR'), ('MZN', 'MZN'), ('NAD', 'NAD'), ('NGN', 'NGN'), ('NIO', 'NIO'), ('NOK', 'NOK'), ('NPR', 'NPR'), ('NZD', 'NZD'), ('OMR', 'OMR'), ('PEN', 'PEN'), ('PGK', 'PGK'), ('PHP', 'PHP'), ('PKR', 'PKR'), ('PLN', 'PLN'), ('PYG', 'PYG'), ('QAR', 'QAR'), ('RON', 'RON'), ('RSD', 'RSD'), ('RUB', 'RUB'), ('RWF', 'RWF'), ('SAR', 'SAR'), ('SCR', 'SCR'), ('SEK', 'SEK'), ('SGD', 'SGD'), ('STD', 'STD'), ('SYP', 'SYP'), ('THB', 'THB'), ('TND', 'TND'), ('TRY', 'TRY'), ('TTD', 'TTD'), ('TWD', 'TWD'), ('TZS', 'TZS'), ('UAH', 'UAH'), ('UGX', 'UGX'), ('USD', 'USD'), ('UYU', 'UYU'), ('VEF', 'VEF'), ('VND', 'VND'), ('VUV', 'VUV'), ('WST', 'WST'), ('XAF', 'XAF'), ('XBT', 'XBT'), ('XCD', 'XCD'), ('XOF', 'XOF'), ('XPF', 'XPF'), ('ZAR', 'ZAR'), ('ZMW', 'ZMW')], default='USD', max_length=3)),
                ('language', models.CharField(choices=[('af_NA', 'Afrikaans (Namibia)'), ('af_ZA', 'Afrikaans (South Africa)'), ('af', 'Afrikaans'), ('ak_GH', 'Akan (Ghana)'), ('ak', 'Akan'), ('sq_AL', 'Albanian (Albania)'), ('sq', 'Albanian'), ('am_ET', 'Amharic (Ethiopia)'), ('am', 'Amharic'), ('ar_DZ', 'Arabic (Algeria)'), ('ar_BH', 'Arabic (Bahrain)'), ('ar_EG', 'Arabic (Egypt)'), ('ar_IQ', 'Arabic (Iraq)'), ('ar_JO', 'Arabic (Jordan)'), ('ar_KW', 'Arabic (Kuwait)'), ('ar_LB', 'Arabic (Lebanon)'), ('ar_LY', 'Arabic (Libya)'), ('ar_MA', 'Arabic (Morocco)'), ('ar_OM', 'Arabic (Oman)'), ('ar_QA', 'Arabic (Qatar)'), ('ar_SA', 'Arabic (Saudi Arabia)'), ('ar_SD', 'Arabic (Sudan)'), ('ar_SY', 'Arabic (Syria)'), ('ar_TN', 'Arabic (Tunisia)'), ('ar_AE', 'Arabic (United Arab Emirates)'), ('ar_YE', 'Arabic (Yemen)'), ('ar', 'Arabic'), ('hy_AM', 'Armenian (Armenia)'), ('hy', 'Armenian'), ('as_IN', 'Assamese (India)'), ('asa_TZ', 'Asu (Tanzania)'), ('asa', 'Asu'), ('az_Cyrl', 'Azerbaijani (Cyrillic)'), ('az_Cyrl_AZ', 'Azerbaijani (Cyrillic, Azerbaijan)'), ('az_Latn', 'Azerbaijani (Latin)'), ('az_Latn_AZ', 'Azerbaijani (Latin, Azerbaijan)'), ('az', 'Azerbaijani'), ('bm_ML', 'Bambara (Mali)'), ('bm', 'Bambara'), ('eu_ES', 'Basque (Spain)'), ('eu', 'Basque'), ('be_BY', 'Belarusian (Belarus)'), ('be', 'Belarusian'), ('bem_ZM', 'Bemba (Zambia)'), ('bem', 'Bemba'), ('bez_TZ', 'Bena (Tanzania)'), ('bez', 'Bena'), ('bn_BD', 'Bengali (Bangladesh)'), ('bn_IN', 'Bengali (India)'), ('bn', 'Bengali'), ('bs_BA', 'Bosnian (Bosnia and Herzegovina)'), ('bs', 'Bosnian'), ('bg_BG', 'Bulgarian (Bulgaria)'), ('bg', 'Bulgarian'), ('my_MM', 'Burmese (Myanmar [Burma])'), ('my', 'Burmese'), ('yue_Hant_HK', 'Cantonese (Traditional, Hong Kong SAR China)'), ('ca_ES', 'Catalan (Spain)'), ('ca', 'Catalan'), ('tzm_Latn', 'Central Morocco Tamazight (Latin)'), ('tzm_Latn_MA', 'Central Morocco Tamazight (Latin, Morocco)'), ('tzm', 'Central Morocco Tamazight'), ('chr_US', 'Cherokee (United States)'), ('chr', 'Cherokee'), ('cgg_UG', 'Chiga (Uganda)'), ('cgg', 'Chiga'), ('zh_Hans', 'Chinese (Simplified Han)'), ('zh_Hans_CN', 'Chinese (Simplified Han, China)'), ('zh_Hans_HK', 'Chinese (Simplified Han, Hong Kong SAR China)'), ('zh_Hans_MO', 'Chinese (Simplified Han, Macau SAR China)'), ('zh_Hans_SG', 'Chinese (Simplified Han, Singapore)'), ('zh_Hant', 'Chinese (Traditional Han)'), ('zh_Hant_HK', 'Chinese (Traditional Han, Hong Kong SAR China)'), ('zh_Hant_MO', 'Chinese (Traditional Han, Macau SAR China)'), ('zh_Hant_TW', 'Chinese (Traditional Han, Taiwan)'), ('zh', 'Chinese'), ('kw_GB', 'Cornish (United Kingdom)'), ('kw', 'Cornish'), ('hr_HR', 'Croatian (Croatia)'), ('hr', 'Croatian'), ('cs_CZ', 'Czech (Czech Republic)'), ('cs', 'Czech'), ('da_DK', 'Danish (Denmark)'), ('da', 'Danish'), ('nl_BE', 'Dutch (Belgium)'), ('nl_NL', 'Dutch (Netherlands)'), ('nl', 'Dutch'), ('ebu_KE', 'Embu (Kenya)'), ('ebu', 'Embu'), ('en_AS', 'English (American Samoa)'), ('en_AU', 'English (Australia)'), ('en_BE', 'English (Belgium)'), ('en_BZ', 'English (Belize)'), ('en_BW', 'English (Botswana)'), ('en_CA', 'English (Canada)'), ('en_GU', 'English (Guam)'), ('en_HK', 'English (Hong Kong SAR China)'), ('en_IN', 'English (India)'), ('en_IE', 'English (Ireland)'), ('en_IL', 'English (Israel)'), ('en_JM', 'English (Jamaica)'), ('en_MT', 'English (Malta)'), ('en_MH', 'English (Marshall Islands)'), ('en_MU', 'English (Mauritius)'), ('en_NA', 'English (Namibia)'), ('en_NZ', 'English (New Zealand)'), ('en_MP', 'English (Northern Mariana Islands)'), ('en_PK', 'English (Pakistan)'), ('en_PH', 'English (Philippines)'), ('en_SG', 'English (Singapore)'), ('en_ZA', 'English (South Africa)'), ('en_TT', 'English (Trinidad and Tobago)'), ('en_UM', 'English (U.S. Minor Outlying Islands)'), ('en_VI', 'English (U.S. Virgin Islands)'), ('en_GB', 'English (United Kingdom)'), ('en_US', 'English (United States)'), ('en_ZW', 'English (Zimbabwe)'), ('en', 'English'), ('eo', 'Esperanto'), ('et_EE', 'Estonian (Estonia)'), ('et', 'Estonian'), ('ee_GH', 'Ewe (Ghana)'), ('ee_TG', 'Ewe (Togo)'), ('ee', 'Ewe'), ('fo_FO', 'Faroese (Faroe Islands)'), ('fo', 'Faroese'), ('fil_PH', 'Filipino (Philippines)'), ('fil', 'Filipino'), ('fi_FI', 'Finnish (Finland)'), ('fi', 'Finnish'), ('fr_BE', 'French (Belgium)'), ('fr_BJ', 'French (Benin)'), ('fr_BF', 'French (Burkina Faso)'), ('fr_BI', 'French (Burundi)'), ('fr_CM', 'French (Cameroon)'), ('fr_CA', 'French (Canada)'), ('fr_CF', 'French (Central African Republic)'), ('fr_TD', 'French (Chad)'), ('fr_KM', 'French (Comoros)'), ('fr_CG', 'French (Congo - Brazzaville)'), ('fr_CD', 'French (Congo - Kinshasa)'), ('fr_CI', 'French (Côte d’Ivoire)'), ('fr_DJ', 'French (Djibouti)'), ('fr_GQ', 'French (Equatorial Guinea)'), ('fr_FR', 'French (France)'), ('fr_GA', 'French (Gabon)'), ('fr_GP', 'French (Guadeloupe)'), ('fr_GN', 'French (Guinea)'), ('fr_LU', 'French (Luxembourg)'), ('fr_MG', 'French (Madagascar)'), ('fr_ML', 'French (Mali)'), ('fr_MQ', 'French (Martinique)'), ('fr_MC', 'French (Monaco)'), ('fr_NE', 'French (Niger)'), ('fr_RW', 'French (Rwanda)'), ('fr_RE', 'French (Réunion)'), ('fr_BL', 'French (Saint Barthélemy)'), ('fr_MF', 'French (Saint Martin)'), ('fr_SN', 'French (Senegal)'), ('fr_CH', 'French (Switzerland)'), ('fr_TG', 'French (Togo)'), ('fr', 'French'), ('ff_SN', 'Fulah (Senegal)'), ('ff', 'Fulah'), ('gl_ES', 'Galician (Spain)'), ('gl', 'Galician'), ('lg_UG', 'Ganda (Uganda)'), ('lg', 'Ganda'), ('ka_GE', 'Georgian (Georgia)'), ('ka', 'Georgian'), ('de_AT', 'German (Austria)'), ('de_BE', 'German (Belgium)'), ('de_DE', 'German (Germany)'), ('de_LI', 'German (Liechtenstein)'), ('de_LU', 'German (Luxembourg)'), ('de_CH', 'German (Switzerland)'), ('de', 'German'), ('el_CY', 'Greek (Cyprus)'), ('el_GR', 'Greek (Greece)'), ('el', 'Greek'), ('gu_IN', 'Gujarati (India)'), ('gu', 'Gujarati'), ('guz_KE', 'Gusii (Kenya)'), ('guz', 'Gusii'), ('ha_Latn', 'Hausa (Latin)'), ('ha_Latn_GH', 'Hausa (Latin, Ghana)'), ('ha_Latn_NE', 'Hausa (Latin, Niger)'), ('ha_Latn_NG', 'Hausa (Latin, Nigeria)'), ('ha', 'Hausa'), ('haw_US', 'Hawaiian (United States)'), ('haw', 'Hawaiian'), ('he_IL', 'Hebrew (Israel)'), ('he', 'Hebrew'), ('hi_IN', 'Hindi (India)'), ('hi', 'Hindi'), ('hu_HU', 'Hungarian (Hungary)'), ('hu', 'Hungarian'), ('is_IS', 'Icelandic (Iceland)'), ('ig_NG', 'Igbo (Nigeria)'), ('ig', 'Igbo'), ('id_ID', 'Indonesian (Indonesia)'), ('id', 'Indonesian'), ('ga_IE', 'Irish (Ireland)'), ('ga', 'Irish'), ('it_IT', 'Italian (Italy)'), ('it_CH', 'Italian (Switzerland)'), ('it', 'Italian'), ('ja_JP', 'Japanese (Japan)'), ('ja', 'Japanese'), ('kea_CV', 'Kabuverdianu (Cape Verde)'), ('kea', 'Kabuverdianu'), ('kab_DZ', 'Kabyle (Algeria)'), ('kab', 'Kabyle'), ('kl_GL', 'Kalaallisut (Greenland)'), ('kl', 'Kalaallisut'), ('kln_KE', 'Kalenjin (Kenya)'), ('kln', 'Kalenjin'), ('kam_KE', 'Kamba (Kenya)'), ('kam', 'Kamba'), ('kn_IN', 'Kannada (India)'), ('kn', 'Kannada'), ('kk_Cyrl', 'Kazakh (Cyrillic)'), ('kk_Cyrl_KZ', 'Kazakh (Cyrillic, Kazakhstan)'), ('kk', 'Kazakh'), ('km_KH', 'Khmer (Cambodia)'), ('km', 'Khmer'), ('ki_KE', 'Kikuyu (Kenya)'), ('ki', 'Kikuyu'), ('rw_RW', 'Kinyarwanda (Rwanda)'), ('rw', 'Kinyarwanda'), ('kok_IN', 'Konkani (India)'), ('kok', 'Konkani'), ('ko_KR', 'Korean (South Korea)'), ('ko', 'Korean'), ('khq_ML', 'Koyra Chiini (Mali)'), ('khq', 'Koyra Chiini'), ('ses_ML', 'Koyraboro Senni (Mali)'), ('ses', 'Koyraboro Senni'), ('lag_TZ', 'Langi (Tanzania)'), ('lag', 'Langi'), ('lv_LV', 'Latvian (Latvia)'), ('lv', 'Latvian'), ('lt_LT', 'Lithuanian (Lithuania)'), ('lt', 'Lithuanian'), ('luo_KE', 'Luo (Kenya)'), ('luo', 'Luo'), ('luy_KE', 'Luyia (Kenya)'), ('luy', 'Luyia'), ('mk_MK', 'Macedonian (Macedonia)'), ('mk', 'Macedonian'), ('jmc_TZ', 'Machame (Tanzania)'), ('jmc', 'Machame'), ('kde_TZ', 'Makonde (Tanzania)'), ('kde', 'Makonde'), ('mg_MG', 'Malagasy (Madagascar)'), ('mg', 'Malagasy'), ('ms_BN', 'Malay (Brunei)'), ('ms_MY', 'Malay (Malaysia)'), ('ms', 'Malay'), ('ml_IN', 'Malayalam (India)'), ('ml', 'Malayalam'), ('mt_MT', 'Maltese (Malta)'), ('mt', 'Maltese'), ('gv_GB', 'Manx (United Kingdom)'), ('gv', 'Manx'), ('mr_IN', 'Marathi (India)'), ('mr', 'Marathi'), ('mas_KE', 'Masai (Kenya)'), ('mas_TZ', 'Masai (Tanzania)'), ('mas', 'Masai'), ('mer_KE', 'Meru (Kenya)'), ('mer', 'Meru'), ('mfe_MU', 'Morisyen (Mauritius)'), ('mfe', 'Morisyen'), ('naq_NA', 'Nama (Namibia)'), ('naq', 'Nama'), ('ne_IN', 'Nepali (India)'), ('ne_NP', 'Nepali (Nepal)'), ('ne', 'Nepali'), ('nd_ZW', 'North Ndebele (Zimbabwe)'), ('nd', 'North Ndebele'), ('nb_NO', 'Norwegian Bokmål (Norway)'), ('nb', 'Norwegian Bokmål'), ('nn_NO', 'Norwegian Nynorsk (Norway)'), ('nn', 'Norwegian Nynorsk'), ('nyn_UG', 'Nyankole (Uganda)'), ('nyn', 'Nyankole'), ('or_IN', 'Oriya (India)'), ('om_ET', 'Oromo (Ethiopia)'), ('om_KE', 'Oromo (Kenya)'), ('om', 'Oromo'), ('ps_AF', 'Pashto (Afghanistan)'), ('ps', 'Pashto'), ('fa_AF', 'Persian (Afghanistan)'), ('fa_IR', 'Persian (Iran)'), ('fa', 'Persian'), ('pl_PL', 'Polish (Poland)'), ('pl', 'Polish'), ('pt_BR', 'Portuguese (Brazil)'), ('pt_GW', 'Portuguese (Guinea-Bissau)'), ('pt_MZ', 'Portuguese (Mozambique)'), ('pt_PT', 'Portuguese (Portugal)'), ('pt', 'Portuguese'), ('pa_Arab', 'Punjabi (Arabic)'), ('pa_Arab_PK', 'Punjabi (Arabic, Pakistan)'), ('pa_Guru', 'Punjabi (Gurmukhi)'), ('pa_Guru_IN', 'Punjabi (Gurmukhi, India)'), ('pa', 'Punjabi'), ('ro_MD', 'Romanian (Moldova)'), ('ro_RO', 'Romanian (Romania)'), ('ro', 'Romanian'), ('rm_CH', 'Romansh (Switzerland)'), ('rm', 'Romansh'), ('rof_TZ', 'Rombo (Tanzania)'), ('rof', 'Rombo'), ('ru_MD', 'Russian (Moldova)'), ('ru_RU', 'Russian (Russia)'), ('ru_UA', 'Russian (Ukraine)'), ('ru', 'Russian'), ('rwk_TZ', 'Rwa (Tanzania)'), ('rwk', 'Rwa'), ('saq_KE', 'Samburu (Kenya)'), ('saq', 'Samburu'), ('sg_CF', 'Sango (Central African Republic)'), ('sg', 'Sango'), ('seh_MZ', 'Sena (Mozambique)'), ('seh', 'Sena'), ('sr_Cyrl', 'Serbian (Cyrillic)'), ('sr_Cyrl_BA', 'Serbian (Cyrillic, Bosnia and Herzegovina)'), ('sr_Cyrl_ME', 'Serbian (Cyrillic, Montenegro)'), ('sr_Cyrl_RS', 'Serbian (Cyrillic, Serbia)'), ('sr_Latn', 'Serbian (Latin)'), ('sr_Latn_BA', 'Serbian (Latin, Bosnia and Herzegovina)'), ('sr_Latn_ME', 'Serbian (Latin, Montenegro)'), ('sr_Latn_RS', 'Serbian (Latin, Serbia)'), ('sr', 'Serbian'), ('sn_ZW', 'Shona (Zimbabwe)'), ('sn', 'Shona'), ('ii_CN', 'Sichuan Yi (China)'), ('ii', 'Sichuan Yi'), ('si_LK', 'Sinhala (Sri Lanka)'), ('si', 'Sinhala'), ('sk_SK', 'Slovak (Slovakia)'), ('sk', 'Slovak'), ('sl_SI', 'Slovenian (Slovenia)'), ('sl', 'Slovenian'), ('xog_UG', 'Soga (Uganda)'), ('xog', 'Soga'), ('so_DJ', 'Somali (Djibouti)'), ('so_ET', 'Somali (Ethiopia)'), ('so_KE', 'Somali (Kenya)'), ('so_SO', 'Somali (Somalia)'), ('so', 'Somali'), ('es_AR', 'Spanish (Argentina)'), ('es_BO', 'Spanish (Bolivia)'), ('es_CL', 'Spanish (Chile)'), ('es_CO', 'Spanish (Colombia)'), ('es_CR', 'Spanish (Costa Rica)'), ('es_DO', 'Spanish (Dominican Republic)'), ('es_EC', 'Spanish (Ecuador)'), ('es_SV', 'Spanish (El Salvador)'), ('es_GQ', 'Spanish (Equatorial Guinea)'), ('es_GT', 'Spanish (Guatemala)'), ('es_HN', 'Spanish (Honduras)'), ('es_419', 'Spanish (Latin America)'), ('es_MX', 'Spanish (Mexico)'), ('es_NI', 'Spanish (Nicaragua)'), ('es_PA', 'Spanish (Panama)'), ('es_PY', 'Spanish (Paraguay)'), ('es_PE', 'Spanish (Peru)'), ('es_PR', 'Spanish (Puerto Rico)'), ('es_ES', 'Spanish (Spain)'), ('es_US', 'Spanish (United States)'), ('es_UY', 'Spanish (Uruguay)'), ('es_VE', 'Spanish (Venezuela)'), ('es', 'Spanish'), ('sw_KE', 'Swahili (Kenya)'), ('sw_TZ', 'Swahili (Tanzania)'), ('sw', 'Swahili'), ('sv_FI', 'Swedish (Finland)'), ('sv_SE', 'Swedish (Sweden)'), ('sv', 'Swedish'), ('gsw_CH', 'Swiss German (Switzerland)'), ('gsw', 'Swiss German'), ('shi_Latn', 'Tachelhit (Latin)'), ('shi_Latn_MA', 'Tachelhit (Latin, Morocco)'), ('shi_Tfng', 'Tachelhit (Tifinagh)'), ('shi_Tfng_MA', 'Tachelhit (Tifinagh, Morocco)'), ('shi', 'Tachelhit'), ('dav_KE', 'Taita (Kenya)'), ('dav', 'Taita'), ('ta_IN', 'Tamil (India)'), ('ta_LK', 'Tamil (Sri Lanka)'), ('ta', 'Tamil'), ('te_IN', 'Telugu (India)'), ('te', 'Telugu'), ('teo_KE', 'Teso (Kenya)'), ('teo_UG', 'Teso (Uganda)'), ('teo', 'Teso'), ('th_TH', 'Thai (Thailand)'), ('th', 'Thai'), ('bo_CN', 'Tibetan (China)'), ('bo_IN', 'Tibetan (India)'), ('bo', 'Tibetan'), ('ti_ER', 'Tigrinya (Eritrea)'), ('ti_ET', 'Tigrinya (Ethiopia)'), ('ti', 'Tigrinya'), ('to_TO', 'Tonga (Tonga)'), ('to', 'Tonga'), ('tr_TR', 'Turkish (Turkey)'), ('tr', 'Turkish'), ('uk_UA', 'Ukrainian (Ukraine)'), ('uk', 'Ukrainian'), ('ur_IN', 'Urdu (India)'), ('ur_PK', 'Urdu (Pakistan)'), ('ur', 'Urdu'), ('uz_Arab', 'Uzbek (Arabic)'), ('uz_Arab_AF', 'Uzbek (Arabic, Afghanistan)'), ('uz_Cyrl', 'Uzbek (Cyrillic)'), ('uz_Cyrl_UZ', 'Uzbek (Cyrillic, Uzbekistan)'), ('uz_Latn', 'Uzbek (Latin)'), ('uz_Latn_UZ', 'Uzbek (Latin, Uzbekistan)'), ('uz', 'Uzbek'), ('vi_VN', 'Vietnamese (Vietnam)'), ('vi', 'Vietnamese'), ('vun_TZ', 'Vunjo (Tanzania)'), ('vun', 'Vunjo'), ('cy_GB', 'Welsh (United Kingdom)'), ('cy', 'Welsh'), ('yo_NG', 'Yoruba (Nigeria)'), ('yo', 'Yoruba'), ('zu_ZA', 'Zulu (South Africa)'), ('zu', 'Zulu')], default='en_US', max_length=11)),
            ],
            options={
                'verbose_name': 'Website',
                'verbose_name_plural': 'Websites',
            },
        ),
        migrations.CreateModel(
            name='Colors',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('websites', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='websites.websites')),
                ('navbar', models.CharField(blank=True, max_length=6, null=True, verbose_name='Navbar color (hexadecimal): ')),
                ('category', models.CharField(blank=True, max_length=6, null=True, verbose_name='Categories bar color (hexadecimal):')),
                ('active', models.CharField(blank=True, max_length=6, null=True, verbose_name='Active category color (hexadecimal): ')),
                ('footer', models.CharField(blank=True, max_length=6, null=True, verbose_name='Footer color (hexadecimal): ')),
                ('text', models.CharField(blank=True, max_length=6, null=True, verbose_name='Text color (hexadecimal): ')),
                ('title', models.CharField(blank=True, max_length=6, null=True, verbose_name='Title color (hexadecimal): ')),
                ('title_hover', models.CharField(blank=True, max_length=6, null=True, verbose_name='Mouse hover color (hexadecimal): ')),
                ('cart', models.CharField(blank=True, max_length=6, null=True, verbose_name='Cart color (hexadecimal): ')),
                ('subcart', models.CharField(blank=True, max_length=6, null=True, verbose_name='Cart option color (hexadecimal): ')),
            ],
            options={
                'verbose_name': 'Color',
                'verbose_name_plural': 'Colors',
            },
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('websites', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='websites.websites')),
                ('telephone', models.CharField(blank=True, max_length=30, null=True, verbose_name='Telephone, only numbers')),
                ('email', models.EmailField(blank=True, max_length=200, null=True)),
                ('facebook', models.CharField(blank=True, max_length=50, null=True, verbose_name='facebook.com/')),
                ('instagram', models.CharField(blank=True, max_length=50, null=True, verbose_name='instagram.com/')),
                ('pinterest', models.CharField(blank=True, max_length=50, null=True, verbose_name='pinterest.com/')),
                ('twitter', models.CharField(blank=True, max_length=50, null=True, verbose_name='twitter.com/')),
                ('linkedin', models.CharField(blank=True, max_length=50, null=True, verbose_name='linkedin.com/in/')),
                ('youtube', models.CharField(blank=True, max_length=100, null=True, verbose_name='youtube.com/channel/')),
                ('whatsapp', models.CharField(blank=True, max_length=20, null=True, verbose_name='Whatsapp, only numbers (e.g. DD999555566)')),
                ('social_media_text', models.CharField(blank=True, max_length=50, null=True, verbose_name='Type a message (e.g. follow us)')),
                ('whatsapp_text', models.CharField(blank=True, max_length=50, null=True, verbose_name='Type a message (e.g. my whatsapp is)')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
            },
        ),
        migrations.CreateModel(
            name='Icons',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('websites', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='websites.websites')),
                ('shortcut', models.ImageField(blank=True, null=True, upload_to=websites.models.icon_path)),
                ('account', models.ImageField(blank=True, null=True, upload_to=websites.models.icon_path)),
                ('cart', models.ImageField(blank=True, null=True, upload_to=websites.models.icon_path)),
                ('search', models.ImageField(blank=True, null=True, upload_to=websites.models.icon_path)),
                ('home', models.ImageField(blank=True, null=True, upload_to=websites.models.icon_path)),
            ],
            options={
                'verbose_name': 'Icon',
                'verbose_name_plural': 'Icons',
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('images', models.ImageField(blank=True, null=True, upload_to=websites.models.image_path)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='price, only numbers')),
                ('promotional_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='promotional price, only numbers')),
                ('is_available', models.BooleanField(default=True, verbose_name='Is available?')),
                ('reason', models.CharField(blank=True, max_length=100, null=True, verbose_name='Reason (optional, only for unavailable)')),
                ('slug', models.SlugField(blank=True, max_length=200)),
                ('show_on_home', models.BooleanField(default=True, verbose_name='Show on homepage?')),
                ('position', models.PositiveSmallIntegerField(default=1)),
                ('price_type', models.CharField(choices=[('1', 'Only use the product price'), ('2', 'Add the product price to the sum groups price'), ('3', 'Sum all the groups price')], default='1', max_length=1, verbose_name='How is the price calculated?')),
                ('categories', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='websites.categories')),
                ('websites', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='websites.websites')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='Options',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('images', models.ImageField(blank=True, null=True, upload_to=websites.models.image_path)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='price, only numbers')),
                ('promotional_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='promotional price, only numbers')),
                ('minimum', models.PositiveIntegerField(default=0)),
                ('maximum', models.PositiveIntegerField(default=1)),
                ('slug', models.SlugField(blank=True, max_length=200)),
                ('position', models.PositiveSmallIntegerField(default=1)),
                ('groups', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='websites.groups')),
                ('websites', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='websites.websites')),
            ],
            options={
                'verbose_name': ('Option',),
                'verbose_name_plural': 'Options',
            },
        ),
        migrations.AddField(
            model_name='groups',
            name='products',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='websites.products'),
        ),
        migrations.AddField(
            model_name='groups',
            name='websites',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='websites.websites'),
        ),
        migrations.AddField(
            model_name='categories',
            name='websites',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='websites.websites'),
        ),
        migrations.CreateModel(
            name='Banners',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('images', models.ImageField(upload_to=websites.models.image_path)),
                ('link', models.SlugField(blank=True, max_length=30, null=True)),
                ('position', models.PositiveSmallIntegerField(default=1)),
                ('websites', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='websites.websites')),
            ],
            options={
                'verbose_name': 'Banner',
                'verbose_name_plural': 'Banners',
            },
        ),
        migrations.AddConstraint(
            model_name='products',
            constraint=models.UniqueConstraint(fields=('websites', 'slug'), name='unique_product'),
        ),
        migrations.AddConstraint(
            model_name='options',
            constraint=models.UniqueConstraint(fields=('groups', 'slug'), name='unique_options'),
        ),
        migrations.AddConstraint(
            model_name='groups',
            constraint=models.UniqueConstraint(fields=('products', 'slug'), name='unique_group'),
        ),
        migrations.AddConstraint(
            model_name='categories',
            constraint=models.UniqueConstraint(fields=('websites', 'slug'), name='unique_category'),
        ),
    ]
